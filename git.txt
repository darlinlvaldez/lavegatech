Claro, Darlin. Aqu√≠ tienes una lista de los **comandos m√°s comunes e importantes de Git**, junto con su **funci√≥n**. Te servir√°n tanto para manejar tu proyecto como para mantenerlo organizado:

---

## üîß Comandos b√°sicos de Git

| Comando                   | ¬øQu√© hace?                                                              |
| ------------------------- | ----------------------------------------------------------------------- |
| `git init`                | Crea un repositorio Git en tu carpeta actual.                           |
| `git clone <url>`         | Descarga un repositorio remoto (como GitHub) a tu PC.                   |
| `git status`              | Muestra el estado de los archivos (modificados, sin seguimiento, etc.). |
| `git add <archivo>`       | Agrega un archivo al "staging area" (preparado para commit).            |
| `git add .`               | Agrega **todos** los archivos modificados.                              |
| `git commit -m "mensaje"` | Guarda los cambios con un mensaje descriptivo.                          |
| `git log`                 | Muestra el historial de commits. Usa `q` para salir.                    |
| `git diff`                | Muestra los cambios **no agregados a√∫n**.                               |
| `git restore <archivo>`   | Revierte los cambios hechos a ese archivo.                              |

---

## üì¶ Ramas (branches)

| Comando                    | ¬øQu√© hace?                             |
| -------------------------- | -------------------------------------- |
| `git branch`               | Lista todas las ramas.                 |
| `git branch <nombre>`      | Crea una nueva rama.                   |
| `git checkout <nombre>`    | Cambia a otra rama.                    |
| `git checkout -b <nombre>` | Crea y cambia a una nueva rama.        |
| `git merge <rama>`         | Fusiona esa rama con la actual.        |
| `git branch -d <nombre>`   | Elimina una rama local.                |
| `git switch <rama>`        | Otra forma moderna de cambiar de rama. |

---

## üöÄ Repositorio remoto (GitHub)

| Comando                       | ¬øQu√© hace?                                           |
| ----------------------------- | ---------------------------------------------------- |
| `git remote -v`               | Muestra los repos remotos conectados.                |
| `git remote add origin <url>` | Conecta el repo local con GitHub.                    |
| `git push origin <rama>`      | Sube la rama actual a GitHub.                        |
| `git push`                    | Sube tus commits al repositorio remoto.              |
| `git pull`                    | Descarga los √∫ltimos cambios del repositorio remoto. |

---

## üõ†Ô∏è Otros √∫tiles

| Comando            | ¬øQu√© hace?                                       |
| ------------------ | ------------------------------------------------ |
| `git stash`        | Guarda temporalmente los cambios no confirmados. |
| `git stash pop`    | Recupera los cambios guardados.                  |
| `git reset --hard` | Elimina todos los cambios **no guardados**. ‚ö†Ô∏è   |
| `git show`         | Muestra los detalles del √∫ltimo commit.          |

---

### ¬øQuieres que te lo deje en un archivo `.txt` o `.md` para tenerlo guardado en tu proyecto tambi√©n?
