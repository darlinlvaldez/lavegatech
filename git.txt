Lista de los comandos m√°s comunes e importantes de Git**, junto con su funci√≥n.

Pasos para guardar y subir.

Desde la rama modificada:
 
git status.
git add .
git commit -m "agrega un comentario aqui".
git push origin desde la rama que hiciste cambios.

Para subir a la rama pricipal (main):

git checkout o switch en main para cambiar de rama.
git pull origin main para aseg√∫rarse de tener la √∫ltima versi√≥n de main.
git merge desde la rama donde quieres recibir los cambios hasta la que cambiaste.
git push origin main para subir los cambios fusionados al repositorio remoto.

Si estas en la rama equivocada y no quieres guardar los cambios en ella:

git stash para guardar temporalmente los cambios.
git stash pop para recuperar los cambios.

## üîß Comandos b√°sicos de Git

| Comando                   | ¬øQu√© hace?                                                              |
| ------------------------- | ----------------------------------------------------------------------- |
| `git init`                | Crea un repositorio Git en tu carpeta actual.                           |
| `git clone <url>`         | Descarga un repositorio remoto (como GitHub) a tu PC.                   |
| `git status`              | Muestra el estado de los archivos (modificados, sin seguimiento, etc.). |
| `git add <archivo>`       | Agrega un archivo al "staging area" (preparado para commit).            |
| `git add .`               | Agrega **todos** los archivos modificados.                              |
| `git commit -m "mensaje"` | Guarda los cambios con un mensaje descriptivo.                          |
| `git log`                 | Muestra el historial de commits. Usa `q` para salir.                    |
| `git diff`                | Muestra los cambios **no agregados a√∫n**.                               |
| `git restore <archivo>`   | Revierte los cambios hechos a ese archivo.                              |

## üì¶ Ramas (branches)

| Comando                    | ¬øQu√© hace?                             |
| -------------------------- | -------------------------------------- |
| `git branch`               | Lista todas las ramas.                 |
| `git branch <nombre>`      | Crea una nueva rama.                   |
| `git checkout <nombre>`    | Cambia a otra rama.                    |
| `git checkout -b <nombre>` | Crea y cambia a una nueva rama.        |
| `git merge <rama>`         | Fusiona esa rama con la actual.        |
| `git branch -d <nombre>`   | Elimina una rama local.                |
| `git switch <rama>`        | Otra forma moderna de cambiar de rama. |

## üöÄ Repositorio remoto (GitHub)

| Comando                       | ¬øQu√© hace?                                           |
| ----------------------------- | ---------------------------------------------------- |
| `git remote -v`               | Muestra los repos remotos conectados.                |
| `git remote add origin <url>` | Conecta el repo local con GitHub.                    |
| `git push origin <rama>`      | Sube la rama actual a GitHub.                        |
| `git push`                    | Sube tus commits al repositorio remoto.              |
| `git pull`                    | Descarga los √∫ltimos cambios del repositorio remoto. |

## üõ†Ô∏è Otros √∫tiles

| Comando            | ¬øQu√© hace?                                       |
| ------------------ | ------------------------------------------------ |
| `git stash`        | Guarda temporalmente los cambios no confirmados. |
| `git stash pop`    | Recupera los cambios guardados.                  |
| `git reset --hard` | Elimina todos los cambios **no guardados**. ‚ö†Ô∏è   |
| `git show`         | Muestra los detalles del √∫ltimo commit.          |