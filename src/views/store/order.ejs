<%- include('../partials/header.ejs') %>

<script src="https://www.paypal.com/sdk/js?client-id=Adxx8fzjTmAkgRKTLil8ciSgRYaYZxTnJf96IAsdJVAvE8-fW3Rx2hbrDZ5VC662O1So9fgvFOPZd5IG&currency=USD"></script>

<script>
document.addEventListener('DOMContentLoaded', async function () {
    const orderProducts = document.querySelector('.order-products');
    const orderTotal = document.querySelector('.order-total');
    
    try {
        const authRes = await fetch('/api/auth/status', { credentials: 'include' });
        const authData = await authRes.json();
        
        if (!authData.authenticated) {
            orderProducts.innerHTML = '<p>Por favor inicia sesión para ver tu carrito.</p>';
            orderTotal.textContent = '$0.00';
            return;
        }

        const cartRes = await fetch('/cart/items', { credentials: 'include' });
        const cartData = await cartRes.json();
        
        if (!cartData.success || !cartData.items || cartData.items.length === 0) {
            orderProducts.innerHTML = '<p>No hay productos en tu orden.</p>';
            orderTotal.textContent = '$0.00';
            return;
        }

        let total = 0;
        orderProducts.innerHTML = '';
        
        cartData.items.forEach(item => {
            const precioFinal = item.descuento > 0 
                ? item.precio * (1 - item.descuento / 100)
                : item.precio;
            
            const subtotal = precioFinal * item.cantidad;
            total += subtotal;

            orderProducts.innerHTML += `
                <div class="order-col">
                    <div>${item.cantidad}x ${item.nombre} ${item.colorSeleccionado || ''}</div>
                    <div>$${subtotal.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,')}</div>
                </div>
            `;
        });
        
        orderTotal.textContent = `$${total.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,')}`;
        
    } catch (error) {
        console.error('Error al cargar el carrito:', error);
        orderProducts.innerHTML = '<p>Error al cargar los productos. Por favor intenta nuevamente.</p>';
        orderTotal.textContent = '$0.00';
    }
});
</script>

	<!-- BREADCRUMB -->
	<div id="breadcrumb" class="section">
		<!-- container -->
		<div class="container">
			<!-- row -->
			<div class="row">
				<div class="col-md-12">
					<h3 class="breadcrumb-header">Pedido</h3>
					<ul class="breadcrumb-tree">
						<li><a href="/">Inicio</a></li>
						<li class="active">Procesar pedido</li>
					</ul>
				</div>
			</div>
			<!-- /row -->
		</div>
		<!-- /container -->
	</div>
	<!-- /BREADCRUMB -->

	<!-- SECTION -->
	<div class="section">
		<!-- container -->
		<div class="container">
			<!-- row -->
			<div class="row">

				<div class="col-md-7">
					<!-- Billing Details -->
					<div class="billing-details">
						<div class="section-title">
							<h3 class="title">Dirección de Envio</h3>
						</div>
						<div class="form-group">
							<input class="input" type="text" name="first-name" placeholder="Nombre">
						</div>
						<div class="form-group">
							<input class="input" type="text" name="last-name" placeholder="Apellido">
						</div>
						<div class="form-group">
							<input class="input" type="email" name="email" placeholder="Correo">
						</div>
						<div class="form-group">
							<input class="input" type="text" name="address" placeholder="Dirección">
						</div>
						<div class="form-group">
							<input class="input" type="text" name="city" placeholder="Ciudad">
						</div>
						<div class="form-group">
							<input class="input" type="text" name="district" placeholder="Distrito">
						</div>
						<div class="form-group">
							<input class="input" type="tel" name="tel" placeholder="Telefono o celular">
						</div>
						<div class="form-group">
							<label for="delivery-time">Horario de entrega preferido (dentro de la semana)</label>
							<select class="input" id="delivery-time" name="delivery_time">
								<option value="8-12">8 AM - 12 PM</option>
								<option value="12-4">2 PM - 5 PM</option>
							</select>
							<p><small>Nota: La fecha de entrega será en algún momento dentro de la próxima semana. La compañía te informará sobre el día exacto de entrega.</small></p>
						</div>						
						<div class="form-group">
							<div class="input-checkbox">
								<input type="checkbox" id="create-account">
								<div class="caption">
									<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
										incididunt.</p>
									<input class="input" type="password" name="password"
										placeholder="Enter Your Password">
								</div>
							</div>
						</div>
					</div>
					<!-- /Billing Details -->

					<!-- Order notes -->
					<div class="order-notes">
						<textarea class="input" placeholder="Mensaje"></textarea>
					</div>
					<!-- /Order notes -->
				</div>

				<!-- Order Details -->
				<div class="col-md-5 order-details">
					<div class="section-title text-center">
						<h3 class="title">Tu Orden</h3>
					</div>
					<div class="order-summary">
						<div class="order-col">
							<div><strong>PRODUCTO(S)</strong></div>
							<div><strong>TOTAL</strong></div>
						</div>
						<div class="order-products">
						</div>
						<div class="order-col">
							<div>ENVÍO</div>
							<div><strong>GRATIS</strong></div>
						</div>
						<div class="order-col">
							<div><strong>TOTAL</strong></div>
							<div><strong class="order-total">$0.00</strong></div>
						</div>
					</div>
					<div class="payment-method">
						<div class="input-radio">
							<input type="radio" name="payment" id="payment-1">
							<label for="payment-1">
								<span></span>
								Tarjetas de crédito y débito
							</label>
							<div class="caption">
								<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
									incididunt ut labore et dolore magna aliqua.</p>
							</div>
						</div>
						<div class="input-radio">
							<input type="radio" name="payment" id="payment-3">
							<label for="payment-3">
								<span></span>
								Paypal
							</label>
							<div class="caption">
								<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
									incididunt ut labore et dolore magna aliqua.</p>
									<div id="paypal-button-container" style="margin-top: 20px;"></div>
							</div>
						</div>
					</div>
					<div class="input-checkbox">
						<input type="checkbox" id="terms">
						<label for="terms">
							<span></span>
							He leído y acepto las <a href="/conditions">Políticas y condiciones</a>
						</label>
					</div>
					<a href="#" class="primary-btn order-submit">Realizar Pedido</a>
				</div>
				<!-- /Order Details -->
			</div>
			<!-- /row -->
		</div>
		<!-- /container -->
	</div>
	<!-- /SECTION -->
	 
	 <script>
document.addEventListener('DOMContentLoaded', function() {
  const paypalRadio = document.getElementById('payment-3');
  const paypalContainer = document.getElementById('paypal-button-container');
  let buttonRendered = false;
  
  paypalRadio.addEventListener('change', function() {
    if (paypalRadio.checked && !buttonRendered) {
      const totalTexto = document.querySelector('.order-total').textContent;
      const orderTotal = parseFloat(totalTexto.replace(/[^0-9.-]+/g, ''));
      
      paypal.Buttons({
        createOrder: function(data, actions) {
          // Validar campos requeridos
          const requiredFields = [
            'first-name', 'last-name', 'email', 
            'address', 'city', 'district', 'tel'
          ];

          const missingFields = requiredFields.filter(field => {
            return !document.querySelector(`input[name="${field}"]`).value.trim();
          });

          if (missingFields.length > 0) {
            alert('Por favor complete todos los campos requeridos');
            return Promise.reject('Campos requeridos faltantes');
          }

          // Validar términos y condiciones
          if (!document.getElementById('terms').checked) {
            alert('Debe aceptar los términos y condiciones');
            return Promise.reject('Términos no aceptados');
          }

          // Primero guardamos la orden en nuestra base de datos
          return fetch('/api/order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            credentials: 'include', // Importante para mantener la sesión
            body: JSON.stringify({
              nombre: document.querySelector('input[name="first-name"]').value.trim(),
              apellido: document.querySelector('input[name="last-name"]').value.trim(),
              email: document.querySelector('input[name="email"]').value.trim(),
              direccion: document.querySelector('input[name="address"]').value.trim(),
              ciudad: document.querySelector('input[name="city"]').value.trim(),
              distrito: document.querySelector('input[name="district"]').value.trim(),
              telefono: document.querySelector('input[name="tel"]').value.trim(),
              horario_entrega: document.getElementById('delivery-time').value,
              mensaje: document.querySelector('.order-notes textarea').value.trim()
            })
          })
          .then(response => {
            if (!response.ok) {
              return response.json().then(err => { throw err; });
            }
            return response.json();
          })
          .then(data => {
            if (!data.success) {
              throw new Error(data.message || 'Error al crear la orden');
            }
            
            // Guardamos el ID de la orden para usarlo después
            window.currentOrderId = data.orderId;
            
            // Ahora creamos la orden de PayPal con el monto correcto
            return actions.order.create({
              purchase_units: [{
                amount: {
                  value: data.total.toFixed(2),
                  currency_code: 'USD',
                  description: `Orden #${data.orderId}`
                }
              }]
            });
          });
        },
        
       onApprove: function(data, actions) {
  return actions.order.capture().then(function(details) {
    return fetch(`/api/order/${window.currentOrderId}/payment`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      credentials: 'include',
      body: JSON.stringify({
        paymentMethod: 'paypal',
        paymentDetails: details,
        payerId: details.payer.payer_id,
        paymentId: details.id
      })
    })
    .then(response => {
      if (!response.ok) {
        return response.json().then(err => { throw err; });
      }
      return response.json();
    })
    .then(data => {
      if (!data.success) {
        throw new Error(data.message || 'Error al registrar el pago');
      }
      
      // Redirigir a la URL proporcionada por el servidor
      if (data.redirectUrl) {
        window.location.href = data.redirectUrl;
      } else {
        // Redirección por defecto si no hay URL específica
        window.location.href = `/user/orders`; // Ajusta esta ruta
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error al procesar el pago: ' + error.message);
    });
  });
},
        
        onError: function(err) {
          console.error('Error en el pago con PayPal:', err);
          let errorMessage = 'Ocurrió un error al procesar el pago';
          
          if (err.message.includes('Campos requeridos faltantes')) {
            errorMessage = 'Por favor complete todos los campos requeridos';
          } else if (err.message.includes('Términos no aceptados')) {
            errorMessage = 'Debe aceptar los términos y condiciones';
          }
          
          alert(errorMessage);
        }
      }).render('#paypal-button-container');
      
      buttonRendered = true;
    }
  });
});
</script>


	<%- include('../partials/footer.ejs') %>

		</body>

	</html>